@'
# ---------- builder ----------
FROM python:3.11-slim AS builder
RUN apt-get update && apt-get install -y --no-install-recommends gcc build-essential libpq-dev && rm -rf /var/lib/apt/lists/*
WORKDIR /build
COPY backend/requirements.txt .
RUN pip wheel --wheel-dir /wheels -r requirements.txt

# ---------- final ----------
FROM python:3.11-slim
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 PIP_NO_CACHE_DIR=1
WORKDIR /app

# system deps for psycopg at runtime
RUN apt-get update && apt-get install -y --no-install-recommends libpq5 && rm -rf /var/lib/apt/lists/*

# install python deps
COPY --from=builder /wheels /wheels
RUN pip install --no-index --find-links=/wheels /wheels/* gunicorn

# app code
COPY backend/ /app/
COPY docker/entrypoint.render.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# env (Django will read from Render env vars)
ENV DJANGO_SETTINGS_MODULE=config.settings

# expose (Render injects $PORT; expose is optional)
EXPOSE 8000

CMD ["/entrypoint.sh"]
'@ | Out-File -Encoding utf8 docker/Dockerfile.backend.prod
